@using CampusEats.Web.Areas.RestaurantOwner.Models.RestaurantOwner
@model RestaurantSettingsViewModel

@{
    ViewData["Title"] = "Restaurant Settings";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Restaurant Settings</h5>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="statusToggle"
                            @(Model.IsActive ? "checked" : "")>
                            <label class="form-check-label" for="statusToggle">
                                @(Model.IsActive ? "Active" : "Inactive")
                            </label>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <form asp-action="Update" method="post">
                        <input type="hidden" asp-for="RestaurantId" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Restaurant Name</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Location" class="form-label">Location</label>
                            <input asp-for="Location" class="form-control" />
                            <span asp-validation-for="Location" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Phone" class="form-label">Phone Number</label>
                            <input asp-for="Phone" class="form-control" />
                            <span asp-validation-for="Phone" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="OpeningTime" class="form-label"></label>
                                <input asp-for="OpeningTime" class="form-control" type="time" />
                                <span asp-validation-for="OpeningTime" class="text-danger"></span>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label asp-for="ClosingTime" class="form-label"></label>
                                <input asp-for="ClosingTime" class="form-control" type="time" />
                                <span asp-validation-for="ClosingTime" class="text-danger"></span>
                            </div>
                        </div>

                        <input type="hidden" asp-for="IsActive" id="isActiveInput" />

                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted">
                                <small>Created: @Model.CreatedAt.ToString("MMM dd, yyyy")</small>
                                @if (Model.UpdatedAt.HasValue)
                                {
                                    <br />
                                    <small>Last Updated: @Model.UpdatedAt.Value.ToString("MMM dd, yyyy HH:mm")</small>
                                }
                            </div>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Toggle restaurant status
        document.getElementById('statusToggle').addEventListener('change', function() {
            const isActive = this.checked;
            document.getElementById('isActiveInput').value = isActive;

            fetch('@Url.Action("ToggleStatus")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const label = this.nextElementSibling;
                    label.textContent = isActive ? 'Active' : 'Inactive';
                    Swal.fire({
                        icon: 'success',
                        title: 'Updated',
                        text: 'Restaurant status updated successfully',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    });
                } else {
                    this.checked = !isActive;
                    Swal.fire('Error', data.message || 'Failed to update status', 'error');
                }
            })
            .catch(error => {
                this.checked = !isActive;
                Swal.fire('Error', 'An error occurred', 'error');
            });
        });
    </script>
}