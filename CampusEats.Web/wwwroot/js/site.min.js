class NotificationService{constructor(){this.toastContainer=document.createElement("div");this.toastContainer.className="toast-container position-fixed top-0 end-0 p-3";document.body.appendChild(this.toastContainer)}show(n,t="info"){const i=document.createElement("div"),r=`toast-${Date.now()}`;i.className=`toast align-items-center border-0 show`;i.setAttribute("role","alert");i.id=r;switch(t){case"success":i.classList.add("bg-success","text-white");break;case"error":i.classList.add("bg-danger","text-white");break;case"warning":i.classList.add("bg-warning","text-dark");break;default:i.classList.add("bg-primary","text-white")}i.innerHTML=`
            <div class="d-flex">
                <div class="toast-body">
                    ${n}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" 
                        data-bs-dismiss="toast">
                </button>
            </div>
        `;this.toastContainer.appendChild(i);setTimeout(()=>{const n=document.getElementById(r);n&&n.remove()},5e3)}success(n){this.show(n,"success")}error(n){this.show(n,"error")}warning(n){this.show(n,"warning")}info(n){this.show(n,"info")}}window.notificationService=new NotificationService;class NotificationHub{constructor(){this.connection=(new signalR.HubConnectionBuilder).withUrl("/notificationHub").withAutomaticReconnect().build();this.connection.onreconnected(()=>{this.joinUserGroup()});this.setupHandlers();this.start()}async start(){try{await this.connection.start();this.joinUserGroup()}catch(n){console.error("Error establishing SignalR connection:",n);setTimeout(()=>this.start(),5e3)}}joinUserGroup(){const n=document.querySelector('meta[name="user-id"]').content;this.connection.invoke("JoinUserGroup",n)}setupHandlers(){this.connection.on("ReceiveNotification",n=>{this.updateNotificationBadge(),this.showNotificationToast(n),this.updateNotificationDropdown()});this.connection.on("UpdateNotificationCount",n=>{const t=document.getElementById("notification-badge");t&&(t.textContent=n,t.style.display=n>0?"block":"none")})}updateNotificationBadge(){fetch("/Notification/GetUnreadCount").then(n=>n.json()).then(n=>{const t=document.getElementById("notification-badge");t&&(t.textContent=n.count,t.style.display=n.count>0?"block":"none")})}updateNotificationDropdown(){fetch("/Notification/GetNotificationPartial").then(n=>n.text()).then(n=>{const t=document.querySelector(".notification-dropdown");t&&(t.innerHTML=n)})}showNotificationToast(n){window.notificationService.show(`${n.message}`,n.type.toLowerCase())}}document.addEventListener("DOMContentLoaded",()=>{window.notificationHub=new NotificationHub});